buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'me.tatarka:gradle-retrolambda:3.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "org.keepnotes"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode System.getenv("BUILD_NUMBER") as Integer ?: rootProject.ext.versionCode
        versionName rootProject.ext.versionName + '.' + versionCode

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility
        targetCompatibility rootProject.ext.javaTargetCompatibility
    }

    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "ReleaseKey"
            keyPassword System.getenv("KEYPWD")
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
            zipAlignEnabled true

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(file.parent, file.name.replace(".apk", "-v" + defaultConfig.versionName + ".apk"))
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

//    dataBinding {
//        enabled = true
//    }
}

dependencies {
    compile project(':domain-notes')

    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:' + rootProject.ext.recyclerviewVersion
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.appcompat7Version
    compile 'com.android.support:support-v4:' + rootProject.ext.support4Version
    compile 'com.android.support:cardview-v7:' + rootProject.ext.cardViewVersion
    compile 'com.android.support:design:' + rootProject.ext.designVersion
    compile 'com.jakewharton:butterknife:' + rootProject.ext.butterknifeVersion

    compile 'com.makeramen:dragsortadapter:1.3.0'

    // dagger apt
    compile 'com.google.dagger:dagger:' + rootProject.ext.dagger2Version
    apt 'com.google.dagger:dagger-compiler:' + rootProject.ext.dagger2Version
    compile 'javax.annotation:javax.annotation-api:1.2'

    // rxbinding
    compile 'com.jakewharton.rxbinding:rxbinding:' + rootProject.ext.rxBindingVersion
    compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:' + rootProject.ext.rxBindingVersion

    // picasso
    compile 'com.squareup.picasso:picasso:' + rootProject.ext.picassoVersion

    // leakcanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:' + rootProject.ext.leakcanaryVersion
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakcanaryVersion

    // -------------- testing ------------------------------
    testCompile 'junit:junit:' + rootProject.ext.junitVersion
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakcanaryVersion

    // retrofit
    testCompile 'com.squareup.retrofit:retrofit-mock:' + rootProject.ext.retrofitVersion

    // dagger2
    testCompile 'com.google.dagger:dagger:' + rootProject.ext.dagger2Version
    testCompile 'com.google.dagger:dagger-compiler:' + rootProject.ext.dagger2Version
    testCompile 'javax.annotation:javax.annotation-api:1.2'

    // mockito
    testCompile 'org.mockito:mockito-core:' + rootProject.ext.mockitoVersion

    // robolectric
    testCompile 'org.robolectric:robolectric:' + rootProject.ext.robolectricVersion

    // Espresso
    androidTestCompile 'com.android.support:support-annotations:' + rootProject.ext.supportAnnotationsVersion
    androidTestCompile 'com.android.support.test:runner:' + rootProject.ext.espressoRunnerVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + rootProject.ext.espressoCoreVersion
}
